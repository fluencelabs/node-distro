name: test

on:
  push:

jobs:
  build-publish:
    name: Build and publish
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Return metadata
        id: docker_publish
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            return `
            {
              "containerimage.config.digest": "sha256:e4268747a3f2d2e5fb2bf3278c498bb225bdcb18654b2d77f0d48e9541608ab6",
              "containerimage.digest": "sha256:2bd832adc9f6590e4e5b247b4af405a5de2fe2436447c2b417d6dc8b2d36104b",
              "image.name": "fluencelabs/node:builtinservices,fluencelabs/node:builtinservices_latest,fluencelabs/node:builtinservices_v211,fluencelabs/node:builtinservices_v0.0.20,fluencelabs/node:builtinservices_v0.0.20_v211"
            }
            `;

      - name: Parse metadata from docker publish
        id: metadata
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            try {
                let metadataRaw = `${{ steps.docker_publish.outputs.result }}`;
                let metadata = JSON.parse(metadataRaw);
                let imageTags = metadata['image.name'].split(",");
                let tagString = imageTags.reduce(
                  (acc, tag) => { return `${acc}\n- ${tag}` },
                  ""
                )
                return tagString;
            } catch (e) {
              console.log("Err: " + e);
              throw e;
            }