name: "release"

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    name: "release"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
### Setup
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set RELEASE_VERSION
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      ### Prepare docker & login to Dockerhub
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Determine container tags
        run: |
          RUN="${{ github.run_number }}"
          VERSION="${{ env.RELEASE_VERSION }}"
          BRANCH="$(git branch --show-current)"
          if [ "$BRANCH" = "main" ]; then
            TAGS=fluencelabs/node:${VERSION},fluencelabs/node:${VERSION}_${RUN},fluencelabs/node:latest
          else
            TAGS=fluencelabs/node:${BRANCH}_${VERSION},fluencelabs/node:${BRANCH}_${VERSION}_${RUN}
          fi
          
          echo "TAGS=$TAGS" | tee -a $GITHUB_ENV
          echo "BUILD_DATE=$(date '+%Y-%m-%dT%H:%M:%S%:z')"

      ### Build and push docker image
      - name: Build and push
        id: docker_publish
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: "${{ env.TAGS }}"
          build-args: |
            COMMIT=${{ github.sha }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            RUN_NUMBER=${{ github.run_number }}
            TAG=${{ env.RELEASE_VERSION }}

      ### Create GitHub release
      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v1
        with:
          configuration: ".github/workflows/changelog_config.json"
          commitMode: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Parse metadata from docker publish
        id: metadata
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            try {
                let metadataRaw = `${{ steps.docker_publish.outputs.metadata }}`;
                let metadata = JSON.parse(metadataRaw);
                let imageTags = metadata['image.name'].split(",");
                let tagString = imageTags.reduce(
                  (acc, tag) => { return `${acc}\n- ${tag}` },
                  ""
                )
                console.log(tagString);
                return tagString;
            } catch (e) {
              console.log("Err: " + e);
              throw e;
            }

      - name: Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          name: Fluence Node ${{ env.RELEASE_VERSION }}
          tag_name: ${{ env.RELEASE_VERSION }}
          body: |
            ${{steps.github_release.outputs.changelog}}

            ## Docker tags
            ${{steps.metadata.outputs.result}}

          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

