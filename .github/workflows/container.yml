name: Publish Fluence Node containers

on:
  workflow_dispatch:
    inputs:
      container_tag:
        description: "Container tag"
        required: false
        default: "latest"
      update_fluence:
        description: Whether to update fluence.json
        required: false
        default: "false"
      version:
        description: 'Fluence version'
        required: false
      url:
        description: 'Fluence binary URL'
        required: false
      sha256:
        description: 'Fluence binary SHA256 hash'
        required: false

jobs:
  build-publish:
    name: Build and publish ${{ github.event.inputs.container_tag || 'latest' }}
    runs-on: ubuntu-latest

    env:
      TAG: ${{ github.event.inputs.container_tag || 'latest' }}
      UPDATE_FLUENCE: ${{ github.event.inputs.update_fluence == 'true' || github.event.inputs.container_tag == '' }}

    strategy:
      matrix:
        package:
          - fluence
          - fluence-ipfs
          - fluence-bundle

    steps:
      - uses: actions/checkout@v3

      - name: Update Fluence in fluence.json to ${{ github.event.inputs.version }}
        if: env.UPDATE_FLUENCE != 'false'
        run: |
          echo '
          {
            "version": "${{ github.event.inputs.version }}",
            "url": "${{ github.event.inputs.url }}",
            "sha256": "${{ github.event.inputs.sha256 }}"
          }
          ' > fluence/fluence.json

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set build date
        id: build-date
        run: echo "::set-output name=date::$(date '+%Y-%m-%dT%H:%M:%S%:z')"

      - name: Build and push ${{ matrix.package }}
        uses: docker/build-push-action@v3
        with:
          context: .
          # push: true
          target: ${{ matrix.package }}
          tags: |
            fluencelabs/${{ matrix.package }}:${{ env.TAG }}
            fluencelabs/${{ matrix.package }}:${{ env.TAG }}_${{ env.RUN }}
          build-args: |
            COMMIT=${{ github.sha }}
            BUILD_DATE=${{ steps.build-date.outputs.date }}
            RUN_NUMBER=${{ env.RUN }}
            TAG=${{ env.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
