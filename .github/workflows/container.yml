name: Publish Container

on:
  push:
    branches:
      - main
      - fluence_tag
      
  workflow_dispatch:
    inputs:
      fluence_branch:
        description: "Fluence node branch"
        required: false
        default: 'latest'
      tag:
        description: "Container tag"
        required: false
        default: "latest"
      services_json:
        description: "services.json URL"
        required: false
        default: "https://github.com/fluencelabs/builtin-services/releases/latest/download/services.json"

jobs:
  build-publish:
    name: Build and publish ${{ github.event.inputs.tag }} from ${{ github.event.inputs.fluence_branch }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      ### Prepare docker & login to Dockerhub
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Determine container tags
        run: |
          TAG="${{ github.event.inputs.tag }}"
          if [ "$TAG" = "latest" ] || [ "$TAG" = "" ]; then
            TAG="latest"
          fi
          echo "TAGS=fluencelabs/node:${TAG}_latest,fluencelabs/node:${TAG}_v${{github.run_number}}" | tee -a $GITHUB_ENV
          echo "FLUENCE_TAG=${{ github.event.inputs.fluence_branch }}" | tee -a $GITHUB_ENV

      ### Build and push docker image
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: "${{ env.TAGS }}"
          build-args: FLUENCE_TAG=${{ env.FLUENCE_TAG }}, SERVICES_JSON=${{ github.event.inputs.services_json }}


